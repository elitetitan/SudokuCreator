/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ANUJ
 */
import java.awt.Color;
import java.io.PrintWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.concurrent.ThreadLocalRandom;

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sudoku_panel = new javax.swing.JPanel();
        arr00 = new javax.swing.JTextField();
        arr10 = new javax.swing.JTextField();
        arr20 = new javax.swing.JTextField();
        arr30 = new javax.swing.JTextField();
        arr40 = new javax.swing.JTextField();
        arr50 = new javax.swing.JTextField();
        arr60 = new javax.swing.JTextField();
        arr70 = new javax.swing.JTextField();
        arr80 = new javax.swing.JTextField();
        arr71 = new javax.swing.JTextField();
        arr81 = new javax.swing.JTextField();
        arr01 = new javax.swing.JTextField();
        arr11 = new javax.swing.JTextField();
        arr21 = new javax.swing.JTextField();
        arr31 = new javax.swing.JTextField();
        arr41 = new javax.swing.JTextField();
        arr51 = new javax.swing.JTextField();
        arr61 = new javax.swing.JTextField();
        arr72 = new javax.swing.JTextField();
        arr82 = new javax.swing.JTextField();
        arr02 = new javax.swing.JTextField();
        arr12 = new javax.swing.JTextField();
        arr22 = new javax.swing.JTextField();
        arr32 = new javax.swing.JTextField();
        arr42 = new javax.swing.JTextField();
        arr52 = new javax.swing.JTextField();
        arr62 = new javax.swing.JTextField();
        arr73 = new javax.swing.JTextField();
        arr83 = new javax.swing.JTextField();
        arr03 = new javax.swing.JTextField();
        arr13 = new javax.swing.JTextField();
        arr23 = new javax.swing.JTextField();
        arr33 = new javax.swing.JTextField();
        arr43 = new javax.swing.JTextField();
        arr53 = new javax.swing.JTextField();
        arr63 = new javax.swing.JTextField();
        arr74 = new javax.swing.JTextField();
        arr84 = new javax.swing.JTextField();
        arr04 = new javax.swing.JTextField();
        arr14 = new javax.swing.JTextField();
        arr24 = new javax.swing.JTextField();
        arr34 = new javax.swing.JTextField();
        arr44 = new javax.swing.JTextField();
        arr54 = new javax.swing.JTextField();
        arr64 = new javax.swing.JTextField();
        arr75 = new javax.swing.JTextField();
        arr85 = new javax.swing.JTextField();
        arr05 = new javax.swing.JTextField();
        arr15 = new javax.swing.JTextField();
        arr25 = new javax.swing.JTextField();
        arr35 = new javax.swing.JTextField();
        arr45 = new javax.swing.JTextField();
        arr55 = new javax.swing.JTextField();
        arr65 = new javax.swing.JTextField();
        arr76 = new javax.swing.JTextField();
        arr86 = new javax.swing.JTextField();
        arr06 = new javax.swing.JTextField();
        arr16 = new javax.swing.JTextField();
        arr26 = new javax.swing.JTextField();
        arr36 = new javax.swing.JTextField();
        arr46 = new javax.swing.JTextField();
        arr56 = new javax.swing.JTextField();
        arr66 = new javax.swing.JTextField();
        arr77 = new javax.swing.JTextField();
        arr87 = new javax.swing.JTextField();
        arr07 = new javax.swing.JTextField();
        arr17 = new javax.swing.JTextField();
        arr27 = new javax.swing.JTextField();
        arr37 = new javax.swing.JTextField();
        arr47 = new javax.swing.JTextField();
        arr57 = new javax.swing.JTextField();
        arr67 = new javax.swing.JTextField();
        arr78 = new javax.swing.JTextField();
        arr88 = new javax.swing.JTextField();
        arr08 = new javax.swing.JTextField();
        arr18 = new javax.swing.JTextField();
        arr28 = new javax.swing.JTextField();
        arr38 = new javax.swing.JTextField();
        arr48 = new javax.swing.JTextField();
        arr58 = new javax.swing.JTextField();
        arr68 = new javax.swing.JTextField();
        solve_button = new javax.swing.JButton();
        sudoku_creator = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        arr00.setToolTipText("");
        arr00.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                arr00ComponentAdded(evt);
            }
        });
        arr00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr00ActionPerformed(evt);
            }
        });

        arr10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr10ActionPerformed(evt);
            }
        });

        arr20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr20ActionPerformed(evt);
            }
        });

        arr30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr30ActionPerformed(evt);
            }
        });

        arr40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr40ActionPerformed(evt);
            }
        });

        arr50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr50ActionPerformed(evt);
            }
        });

        arr60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr60ActionPerformed(evt);
            }
        });

        arr70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr70ActionPerformed(evt);
            }
        });

        arr80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr80ActionPerformed(evt);
            }
        });

        arr71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr71ActionPerformed(evt);
            }
        });

        arr81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr81ActionPerformed(evt);
            }
        });

        arr01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr01ActionPerformed(evt);
            }
        });

        arr11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr11ActionPerformed(evt);
            }
        });

        arr21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr21ActionPerformed(evt);
            }
        });

        arr31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr31ActionPerformed(evt);
            }
        });

        arr41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr41ActionPerformed(evt);
            }
        });

        arr51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr51ActionPerformed(evt);
            }
        });

        arr61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr61ActionPerformed(evt);
            }
        });

        arr72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr72ActionPerformed(evt);
            }
        });

        arr82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr82ActionPerformed(evt);
            }
        });

        arr02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr02ActionPerformed(evt);
            }
        });

        arr12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr12ActionPerformed(evt);
            }
        });

        arr22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr22ActionPerformed(evt);
            }
        });

        arr32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr32ActionPerformed(evt);
            }
        });

        arr42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr42ActionPerformed(evt);
            }
        });

        arr52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr52ActionPerformed(evt);
            }
        });

        arr62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr62ActionPerformed(evt);
            }
        });

        arr73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr73ActionPerformed(evt);
            }
        });

        arr83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr83ActionPerformed(evt);
            }
        });

        arr03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr03ActionPerformed(evt);
            }
        });

        arr13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr13ActionPerformed(evt);
            }
        });

        arr23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr23ActionPerformed(evt);
            }
        });

        arr33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr33ActionPerformed(evt);
            }
        });

        arr43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr43ActionPerformed(evt);
            }
        });

        arr53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr53ActionPerformed(evt);
            }
        });

        arr63.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr63ActionPerformed(evt);
            }
        });

        arr74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr74ActionPerformed(evt);
            }
        });

        arr84.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr84ActionPerformed(evt);
            }
        });

        arr04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr04ActionPerformed(evt);
            }
        });

        arr14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr14ActionPerformed(evt);
            }
        });

        arr24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr24ActionPerformed(evt);
            }
        });

        arr34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr34ActionPerformed(evt);
            }
        });

        arr44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr44ActionPerformed(evt);
            }
        });

        arr54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr54ActionPerformed(evt);
            }
        });

        arr64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr64ActionPerformed(evt);
            }
        });

        arr75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr75ActionPerformed(evt);
            }
        });

        arr85.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr85ActionPerformed(evt);
            }
        });

        arr05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr05ActionPerformed(evt);
            }
        });

        arr15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr15ActionPerformed(evt);
            }
        });

        arr25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr25ActionPerformed(evt);
            }
        });

        arr35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr35ActionPerformed(evt);
            }
        });

        arr45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr45ActionPerformed(evt);
            }
        });

        arr55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr55ActionPerformed(evt);
            }
        });

        arr65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr65ActionPerformed(evt);
            }
        });

        arr76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr76ActionPerformed(evt);
            }
        });

        arr86.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr86ActionPerformed(evt);
            }
        });

        arr06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr06ActionPerformed(evt);
            }
        });

        arr16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr16ActionPerformed(evt);
            }
        });

        arr26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr26ActionPerformed(evt);
            }
        });

        arr36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr36ActionPerformed(evt);
            }
        });

        arr46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr46ActionPerformed(evt);
            }
        });

        arr56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr56ActionPerformed(evt);
            }
        });

        arr66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr66ActionPerformed(evt);
            }
        });

        arr77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr77ActionPerformed(evt);
            }
        });

        arr87.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr87ActionPerformed(evt);
            }
        });

        arr07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr07ActionPerformed(evt);
            }
        });

        arr17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr17ActionPerformed(evt);
            }
        });

        arr27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr27ActionPerformed(evt);
            }
        });

        arr37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr37ActionPerformed(evt);
            }
        });

        arr47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr47ActionPerformed(evt);
            }
        });

        arr57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr57ActionPerformed(evt);
            }
        });

        arr67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr67ActionPerformed(evt);
            }
        });

        arr78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr78ActionPerformed(evt);
            }
        });

        arr88.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr88ActionPerformed(evt);
            }
        });

        arr08.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr08ActionPerformed(evt);
            }
        });

        arr18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr18ActionPerformed(evt);
            }
        });

        arr28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr28ActionPerformed(evt);
            }
        });

        arr38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr38ActionPerformed(evt);
            }
        });

        arr48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr48ActionPerformed(evt);
            }
        });

        arr58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr58ActionPerformed(evt);
            }
        });

        arr68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr68ActionPerformed(evt);
            }
        });

        solve_button.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        solve_button.setText("Solve!");
        solve_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solve_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sudoku_panelLayout = new javax.swing.GroupLayout(sudoku_panel);
        sudoku_panel.setLayout(sudoku_panelLayout);
        sudoku_panelLayout.setHorizontalGroup(
            sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sudoku_panelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arr80, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr70, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr60, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr50, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr40, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr30, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr00, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arr81, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr71, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr61, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr51, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr41, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr31, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr01, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arr82, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr72, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr62, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr52, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr42, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr32, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr22, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr02, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arr83, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr73, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr63, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr53, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr43, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr33, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr23, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr03, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arr84, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr74, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr64, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr54, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr44, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr34, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr24, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr04, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arr85, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr75, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr65, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr55, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr45, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr35, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr25, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arr05, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(solve_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arr86, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr76, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr66, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr56, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr46, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr36, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr26, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr06, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arr87, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr77, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr67, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr57, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr47, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr37, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr27, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr07, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arr88, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr78, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr68, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr58, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr48, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr38, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr28, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arr08, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        sudoku_panelLayout.setVerticalGroup(
            sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sudoku_panelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr08, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr38, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr48, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr58, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr68, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr78, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr88, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr07, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr37, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr47, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr57, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr67, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr77, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr87, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr06, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr36, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr46, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr66, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr76, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr86, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr05, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr45, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr65, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr75, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr85, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr04, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr44, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr64, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr74, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr84, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr03, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr43, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr53, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr63, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr73, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr83, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createSequentialGroup()
                        .addComponent(arr02, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr42, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr52, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arr62, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr72, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arr82, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sudoku_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(sudoku_panelLayout.createSequentialGroup()
                            .addComponent(arr01, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(arr31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr41, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr51, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(arr61, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr71, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr81, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(sudoku_panelLayout.createSequentialGroup()
                            .addComponent(arr00, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(arr30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr50, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(arr60, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr70, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(arr80, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(solve_button, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
        );

        sudoku_creator.setFont(new java.awt.Font("Times New Roman", 2, 20)); // NOI18N
        sudoku_creator.setText("Sudoku Creator");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(sudoku_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(sudoku_creator)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sudoku_creator, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sudoku_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void solve_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solve_buttonActionPerformed
        // TODO add your handling code here:
        //dEfAuLt();
        try {
            SudokuSolver.solver(0, 0);
            setValues();
        } catch (Exception e) {

        }


    }//GEN-LAST:event_solve_buttonActionPerformed
    public void dEfAuLt() {
        try {
            //    SudokuSolver.rowSolver(0);
            //    SudokuSolver.display();
            //   setValues();
            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 9; j++) {
                    for (int k = 1; k < 10; k++) {

                        SudokuSolver.setZero();
                        SudokuSolver.setSeedValue(i, j, k);
                        SudokuSolver.solver(0, 0);
                        setValues();
                        SudokuSolver.setZero();
                    }
                }
            }
        } catch (Exception e) {

        }
    }

    public void setValues() {
        arr00.setText(Integer.toString(SudokuSolver.get(0, 0)));
        arr01.setText(Integer.toString(SudokuSolver.get(0, 1)));
        arr02.setText(Integer.toString(SudokuSolver.get(0, 2)));
        arr03.setText(Integer.toString(SudokuSolver.get(0, 3)));
        arr04.setText(Integer.toString(SudokuSolver.get(0, 4)));
        arr05.setText(Integer.toString(SudokuSolver.get(0, 5)));
        arr06.setText(Integer.toString(SudokuSolver.get(0, 6)));
        arr07.setText(Integer.toString(SudokuSolver.get(0, 7)));
        arr08.setText(Integer.toString(SudokuSolver.get(0, 8)));
        arr10.setText(Integer.toString(SudokuSolver.get(1, 0)));
        arr11.setText(Integer.toString(SudokuSolver.get(1, 1)));
        arr12.setText(Integer.toString(SudokuSolver.get(1, 2)));
        arr13.setText(Integer.toString(SudokuSolver.get(1, 3)));
        arr14.setText(Integer.toString(SudokuSolver.get(1, 4)));
        arr15.setText(Integer.toString(SudokuSolver.get(1, 5)));
        arr16.setText(Integer.toString(SudokuSolver.get(1, 6)));
        arr17.setText(Integer.toString(SudokuSolver.get(1, 7)));
        arr18.setText(Integer.toString(SudokuSolver.get(1, 8)));
        arr20.setText(Integer.toString(SudokuSolver.get(2, 0)));
        arr21.setText(Integer.toString(SudokuSolver.get(2, 1)));
        arr22.setText(Integer.toString(SudokuSolver.get(2, 2)));
        arr23.setText(Integer.toString(SudokuSolver.get(2, 3)));
        arr24.setText(Integer.toString(SudokuSolver.get(2, 4)));
        arr25.setText(Integer.toString(SudokuSolver.get(2, 5)));
        arr26.setText(Integer.toString(SudokuSolver.get(2, 6)));
        arr27.setText(Integer.toString(SudokuSolver.get(2, 7)));
        arr28.setText(Integer.toString(SudokuSolver.get(2, 8)));
        arr30.setText(Integer.toString(SudokuSolver.get(3, 0)));
        arr31.setText(Integer.toString(SudokuSolver.get(3, 1)));
        arr32.setText(Integer.toString(SudokuSolver.get(3, 2)));
        arr33.setText(Integer.toString(SudokuSolver.get(3, 3)));
        arr34.setText(Integer.toString(SudokuSolver.get(3, 4)));
        arr35.setText(Integer.toString(SudokuSolver.get(3, 5)));
        arr36.setText(Integer.toString(SudokuSolver.get(3, 6)));
        arr37.setText(Integer.toString(SudokuSolver.get(3, 7)));
        arr38.setText(Integer.toString(SudokuSolver.get(3, 8)));
        arr40.setText(Integer.toString(SudokuSolver.get(4, 0)));
        arr41.setText(Integer.toString(SudokuSolver.get(4, 1)));
        arr42.setText(Integer.toString(SudokuSolver.get(4, 2)));
        arr43.setText(Integer.toString(SudokuSolver.get(4, 3)));
        arr44.setText(Integer.toString(SudokuSolver.get(4, 4)));
        arr45.setText(Integer.toString(SudokuSolver.get(4, 5)));
        arr46.setText(Integer.toString(SudokuSolver.get(4, 6)));
        arr47.setText(Integer.toString(SudokuSolver.get(4, 7)));
        arr48.setText(Integer.toString(SudokuSolver.get(4, 8)));
        arr50.setText(Integer.toString(SudokuSolver.get(5, 0)));
        arr51.setText(Integer.toString(SudokuSolver.get(5, 1)));
        arr52.setText(Integer.toString(SudokuSolver.get(5, 2)));
        arr53.setText(Integer.toString(SudokuSolver.get(5, 3)));
        arr54.setText(Integer.toString(SudokuSolver.get(5, 4)));
        arr55.setText(Integer.toString(SudokuSolver.get(5, 5)));
        arr56.setText(Integer.toString(SudokuSolver.get(5, 6)));
        arr57.setText(Integer.toString(SudokuSolver.get(5, 7)));
        arr58.setText(Integer.toString(SudokuSolver.get(5, 8)));
        arr60.setText(Integer.toString(SudokuSolver.get(6, 0)));
        arr61.setText(Integer.toString(SudokuSolver.get(6, 1)));
        arr62.setText(Integer.toString(SudokuSolver.get(6, 2)));
        arr63.setText(Integer.toString(SudokuSolver.get(6, 3)));
        arr64.setText(Integer.toString(SudokuSolver.get(6, 4)));
        arr65.setText(Integer.toString(SudokuSolver.get(6, 5)));
        arr66.setText(Integer.toString(SudokuSolver.get(6, 6)));
        arr67.setText(Integer.toString(SudokuSolver.get(6, 7)));
        arr68.setText(Integer.toString(SudokuSolver.get(6, 8)));
        arr70.setText(Integer.toString(SudokuSolver.get(7, 0)));
        arr71.setText(Integer.toString(SudokuSolver.get(7, 1)));
        arr72.setText(Integer.toString(SudokuSolver.get(7, 2)));
        arr73.setText(Integer.toString(SudokuSolver.get(7, 3)));
        arr74.setText(Integer.toString(SudokuSolver.get(7, 4)));
        arr75.setText(Integer.toString(SudokuSolver.get(7, 5)));
        arr76.setText(Integer.toString(SudokuSolver.get(7, 6)));
        arr77.setText(Integer.toString(SudokuSolver.get(7, 7)));
        arr78.setText(Integer.toString(SudokuSolver.get(7, 8)));
        arr80.setText(Integer.toString(SudokuSolver.get(8, 0)));
        arr81.setText(Integer.toString(SudokuSolver.get(8, 1)));
        arr82.setText(Integer.toString(SudokuSolver.get(8, 2)));
        arr83.setText(Integer.toString(SudokuSolver.get(8, 3)));
        arr84.setText(Integer.toString(SudokuSolver.get(8, 4)));
        arr85.setText(Integer.toString(SudokuSolver.get(8, 5)));
        arr86.setText(Integer.toString(SudokuSolver.get(8, 6)));
        arr87.setText(Integer.toString(SudokuSolver.get(8, 7)));
        arr88.setText(Integer.toString(SudokuSolver.get(8, 8)));
    }

    private void arr00ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_arr00ComponentAdded
        // TODO add your handling code here:
        arr00.setText(Integer.toString(SudokuSolver.get(0, 0)));


    }//GEN-LAST:event_arr00ComponentAdded

    private void arr00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr00ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr00.getText()
        );
        SudokuSolver.setter(0, 0, num);
        arr00.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr00ActionPerformed

    private void arr01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr01ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr01.getText()
        );
        SudokuSolver.setter(0, 1, num);
        arr01.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr01ActionPerformed

    private void arr84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr84ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr84.getText()
        );
        SudokuSolver.setter(8, 4, num);
        arr84.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr84ActionPerformed

    private void arr85ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr85ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr85.getText()
        );
        SudokuSolver.setter(8, 5, num);
        arr85.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr85ActionPerformed

    private void arr02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr02ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr02.getText()
        );
        SudokuSolver.setter(0, 2, num);
        arr02.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr02ActionPerformed

    private void arr03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr03ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr03.getText()
        );
        SudokuSolver.setter(0, 3, num);
        arr03.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr03ActionPerformed

    private void arr04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr04ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr04.getText()
        );
        SudokuSolver.setter(0, 4, num);
        arr04.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr04ActionPerformed

    private void arr05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr05ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr05.getText()
        );
        SudokuSolver.setter(0, 5, num);
        arr05.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr05ActionPerformed

    private void arr06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr06ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr06.getText()
        );
        SudokuSolver.setter(0, 6, num);
        arr06.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr06ActionPerformed

    private void arr07ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr07ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr07.getText()
        );
        SudokuSolver.setter(0, 7, num);
        arr07.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr07ActionPerformed

    private void arr08ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr08ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr08.getText()
        );
        SudokuSolver.setter(0, 8, num);
        arr08.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr08ActionPerformed

    private void arr10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr10ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr10.getText()
        );
        SudokuSolver.setter(1, 0, num);
        arr10.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr10ActionPerformed

    private void arr11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr11ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr11.getText()
        );
        SudokuSolver.setter(1, 1, num);
        arr11.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr11ActionPerformed

    private void arr12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr12ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr12.getText()
        );
        SudokuSolver.setter(1, 2, num);
        arr12.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr12ActionPerformed

    private void arr13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr13ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr13.getText()
        );
        SudokuSolver.setter(1, 3, num);
        arr13.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr13ActionPerformed

    private void arr14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr14ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr14.getText()
        );
        SudokuSolver.setter(1, 4, num);
        arr14.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr14ActionPerformed

    private void arr15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr15ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr15.getText()
        );
        SudokuSolver.setter(1, 5, num);
        arr15.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr15ActionPerformed

    private void arr16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr16ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr16.getText()
        );
        SudokuSolver.setter(1, 6, num);
        arr16.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr16ActionPerformed

    private void arr17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr17ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr17.getText()
        );
        SudokuSolver.setter(1, 7, num);
        arr17.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr17ActionPerformed

    private void arr18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr18ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr18.getText()
        );
        SudokuSolver.setter(1, 8, num);
        arr18.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr18ActionPerformed

    private void arr20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr20ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr20.getText()
        );
        SudokuSolver.setter(2, 0, num);
        arr20.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr20ActionPerformed

    private void arr21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr21ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr21.getText()
        );
        SudokuSolver.setter(2, 1, num);
        arr21.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr21ActionPerformed

    private void arr22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr22ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr22.getText()
        );
        SudokuSolver.setter(2, 2, num);
        arr22.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr22ActionPerformed

    private void arr23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr23ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr23.getText()
        );
        SudokuSolver.setter(2, 3, num);
        arr23.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr23ActionPerformed

    private void arr24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr24ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr24.getText()
        );
        SudokuSolver.setter(2, 4, num);
        arr24.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr24ActionPerformed

    private void arr25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr25ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr25.getText()
        );
        SudokuSolver.setter(2, 5, num);
        arr25.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr25ActionPerformed

    private void arr26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr26ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr26.getText()
        );
        SudokuSolver.setter(2, 6, num);
        arr26.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr26ActionPerformed

    private void arr27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr27ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr27.getText()
        );
        SudokuSolver.setter(2, 7, num);
        arr27.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr27ActionPerformed

    private void arr28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr28ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr28.getText()
        );
        SudokuSolver.setter(2, 8, num);
        arr28.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr28ActionPerformed

    private void arr30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr30ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr30.getText()
        );
        SudokuSolver.setter(3, 0, num);
        arr30.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr30ActionPerformed

    private void arr31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr31ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr31.getText()
        );
        SudokuSolver.setter(3, 2, num);
        arr31.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr31ActionPerformed

    private void arr32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr32ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr32.getText()
        );
        SudokuSolver.setter(3, 2, num);
        arr32.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr32ActionPerformed

    private void arr33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr33ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr33.getText()
        );
        SudokuSolver.setter(3, 3, num);
        arr33.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr33ActionPerformed

    private void arr34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr34ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr34.getText()
        );
        SudokuSolver.setter(3, 4, num);
        arr34.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr34ActionPerformed

    private void arr35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr35ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr35.getText()
        );
        SudokuSolver.setter(3, 5, num);
        arr35.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr35ActionPerformed

    private void arr36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr36ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr36.getText()
        );
        SudokuSolver.setter(3, 6, num);
        arr36.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr36ActionPerformed

    private void arr37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr37ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr37.getText()
        );
        SudokuSolver.setter(3, 7, num);
        arr37.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr37ActionPerformed

    private void arr38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr38ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr38.getText()
        );
        SudokuSolver.setter(3, 8, num);
        arr38.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr38ActionPerformed

    private void arr40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr40ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr40.getText()
        );
        SudokuSolver.setter(4, 0, num);
        arr40.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr40ActionPerformed

    private void arr41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr41ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr41.getText()
        );
        SudokuSolver.setter(4, 1, num);
        arr41.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr41ActionPerformed

    private void arr42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr42ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr42.getText()
        );
        SudokuSolver.setter(4, 2, num);
        arr42.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr42ActionPerformed

    private void arr43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr43ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr43.getText()
        );
        SudokuSolver.setter(4, 3, num);
        arr43.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr43ActionPerformed

    private void arr44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr44ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr44.getText()
        );
        SudokuSolver.setter(4, 4, num);
        arr44.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr44ActionPerformed

    private void arr45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr45ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr45.getText()
        );
        SudokuSolver.setter(4, 5, num);
        arr45.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr45ActionPerformed

    private void arr46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr46ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr46.getText()
        );
        SudokuSolver.setter(4, 6, num);
        arr46.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr46ActionPerformed

    private void arr47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr47ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr47.getText()
        );
        SudokuSolver.setter(4, 7, num);
        arr47.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr47ActionPerformed

    private void arr48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr48ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr48.getText()
        );
        SudokuSolver.setter(4, 8, num);
        arr48.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr48ActionPerformed

    private void arr50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr50ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr50.getText()
        );
        SudokuSolver.setter(5, 0, num);
        arr50.setBackground(Color.GREEN);

    }//GEN-LAST:event_arr50ActionPerformed

    private void arr51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr51ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr51.getText()
        );
        SudokuSolver.setter(5, 1, num);
        arr51.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr51ActionPerformed

    private void arr52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr52ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr52.getText()
        );
        SudokuSolver.setter(5, 2, num);
        arr52.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr52ActionPerformed

    private void arr53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr53ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr53.getText()
        );
        SudokuSolver.setter(5, 3, num);
        arr53.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr53ActionPerformed

    private void arr54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr54ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr54.getText()
        );
        SudokuSolver.setter(5, 4, num);
        arr54.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr54ActionPerformed

    private void arr55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr55ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr55.getText()
        );
        SudokuSolver.setter(5, 5, num);
        arr55.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr55ActionPerformed

    private void arr56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr56ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr56.getText()
        );
        SudokuSolver.setter(5, 6, num);
        arr56.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr56ActionPerformed

    private void arr57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr57ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr57.getText()
        );
        SudokuSolver.setter(5, 7, num);
        arr57.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr57ActionPerformed

    private void arr58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr58ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr58.getText()
        );
        SudokuSolver.setter(5, 8, num);
        arr58.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr58ActionPerformed

    private void arr60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr60ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr60.getText()
        );
        SudokuSolver.setter(6, 0, num);
        arr60.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr60ActionPerformed

    private void arr61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr61ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr61.getText()
        );
        SudokuSolver.setter(6, 1, num);
        arr61.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr61ActionPerformed

    private void arr62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr62ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr62.getText()
        );
        SudokuSolver.setter(6, 2, num);
        arr62.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr62ActionPerformed

    private void arr63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr63ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr63.getText()
        );
        SudokuSolver.setter(6, 3, num);
        arr63.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr63ActionPerformed

    private void arr64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr64ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr64.getText()
        );
        SudokuSolver.setter(6, 4, num);
        arr64.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr64ActionPerformed

    private void arr65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr65ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr65.getText()
        );
        SudokuSolver.setter(6, 5, num);
        arr65.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr65ActionPerformed

    private void arr66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr66ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr66.getText()
        );
        SudokuSolver.setter(6, 6, num);
        arr66.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr66ActionPerformed

    private void arr67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr67ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr67.getText()
        );
        SudokuSolver.setter(6, 7, num);
        arr67.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr67ActionPerformed

    private void arr68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr68ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr68.getText()
        );
        SudokuSolver.setter(6, 8, num);
        arr68.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr68ActionPerformed

    private void arr70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr70ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr70.getText()
        );
        SudokuSolver.setter(7, 0, num);
        arr70.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr70ActionPerformed

    private void arr71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr71ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr71.getText()
        );
        SudokuSolver.setter(7, 1, num);
        arr71.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr71ActionPerformed

    private void arr72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr72ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr72.getText()
        );
        SudokuSolver.setter(7, 2, num);
        arr72.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr72ActionPerformed

    private void arr73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr73ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr73.getText()
        );
        SudokuSolver.setter(7, 3, num);
        arr73.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr73ActionPerformed

    private void arr74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr74ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr74.getText()
        );
        SudokuSolver.setter(7, 4, num);
        arr74.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr74ActionPerformed

    private void arr75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr75ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr75.getText()
        );
        SudokuSolver.setter(7, 5, num);
        arr75.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr75ActionPerformed

    private void arr76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr76ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr76.getText()
        );
        SudokuSolver.setter(7, 6, num);
        arr76.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr76ActionPerformed

    private void arr77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr77ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr77.getText()
        );
        SudokuSolver.setter(7, 7, num);
        arr77.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr77ActionPerformed

    private void arr78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr78ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr78.getText()
        );
        SudokuSolver.setter(7, 8, num);
        arr78.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr78ActionPerformed

    private void arr80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr80ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr80.getText()
        );
        SudokuSolver.setter(8, 0, num);
        arr80.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr80ActionPerformed

    private void arr81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr81ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr81.getText()
        );
        SudokuSolver.setter(8, 1, num);
        arr81.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr81ActionPerformed

    private void arr82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr82ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr82.getText()
        );
        SudokuSolver.setter(8, 2, num);
        arr82.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr82ActionPerformed

    private void arr83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr83ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr83.getText()
        );
        SudokuSolver.setter(8, 3, num);
        arr83.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr83ActionPerformed

    private void arr86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr86ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr86.getText()
        );
        SudokuSolver.setter(8, 6, num);
        arr86.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr86ActionPerformed

    private void arr87ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr87ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr87.getText()
        );
        SudokuSolver.setter(8, 7, num);
        arr87.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr87ActionPerformed

    private void arr88ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr88ActionPerformed
        // TODO add your handling code here:
        int num = Integer.parseInt(
                this.arr88.getText()
        );
        SudokuSolver.setter(8, 8, num);
        arr88.setBackground(Color.GREEN);
    }//GEN-LAST:event_arr88ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        SudokuSolver s = new SudokuSolver();
        s.display();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }

        });

        s.display();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arr00;
    private javax.swing.JTextField arr01;
    private javax.swing.JTextField arr02;
    private javax.swing.JTextField arr03;
    private javax.swing.JTextField arr04;
    private javax.swing.JTextField arr05;
    private javax.swing.JTextField arr06;
    private javax.swing.JTextField arr07;
    private javax.swing.JTextField arr08;
    private javax.swing.JTextField arr10;
    private javax.swing.JTextField arr11;
    private javax.swing.JTextField arr12;
    private javax.swing.JTextField arr13;
    private javax.swing.JTextField arr14;
    private javax.swing.JTextField arr15;
    private javax.swing.JTextField arr16;
    private javax.swing.JTextField arr17;
    private javax.swing.JTextField arr18;
    private javax.swing.JTextField arr20;
    private javax.swing.JTextField arr21;
    private javax.swing.JTextField arr22;
    private javax.swing.JTextField arr23;
    private javax.swing.JTextField arr24;
    private javax.swing.JTextField arr25;
    private javax.swing.JTextField arr26;
    private javax.swing.JTextField arr27;
    private javax.swing.JTextField arr28;
    private javax.swing.JTextField arr30;
    private javax.swing.JTextField arr31;
    private javax.swing.JTextField arr32;
    private javax.swing.JTextField arr33;
    private javax.swing.JTextField arr34;
    private javax.swing.JTextField arr35;
    private javax.swing.JTextField arr36;
    private javax.swing.JTextField arr37;
    private javax.swing.JTextField arr38;
    private javax.swing.JTextField arr40;
    private javax.swing.JTextField arr41;
    private javax.swing.JTextField arr42;
    private javax.swing.JTextField arr43;
    private javax.swing.JTextField arr44;
    private javax.swing.JTextField arr45;
    private javax.swing.JTextField arr46;
    private javax.swing.JTextField arr47;
    private javax.swing.JTextField arr48;
    private javax.swing.JTextField arr50;
    private javax.swing.JTextField arr51;
    private javax.swing.JTextField arr52;
    private javax.swing.JTextField arr53;
    private javax.swing.JTextField arr54;
    private javax.swing.JTextField arr55;
    private javax.swing.JTextField arr56;
    private javax.swing.JTextField arr57;
    private javax.swing.JTextField arr58;
    private javax.swing.JTextField arr60;
    private javax.swing.JTextField arr61;
    private javax.swing.JTextField arr62;
    private javax.swing.JTextField arr63;
    private javax.swing.JTextField arr64;
    private javax.swing.JTextField arr65;
    private javax.swing.JTextField arr66;
    private javax.swing.JTextField arr67;
    private javax.swing.JTextField arr68;
    private javax.swing.JTextField arr70;
    private javax.swing.JTextField arr71;
    private javax.swing.JTextField arr72;
    private javax.swing.JTextField arr73;
    private javax.swing.JTextField arr74;
    private javax.swing.JTextField arr75;
    private javax.swing.JTextField arr76;
    private javax.swing.JTextField arr77;
    private javax.swing.JTextField arr78;
    private javax.swing.JTextField arr80;
    private javax.swing.JTextField arr81;
    private javax.swing.JTextField arr82;
    private javax.swing.JTextField arr83;
    private javax.swing.JTextField arr84;
    private javax.swing.JTextField arr85;
    private javax.swing.JTextField arr86;
    private javax.swing.JTextField arr87;
    private javax.swing.JTextField arr88;
    private javax.swing.JButton solve_button;
    private javax.swing.JLabel sudoku_creator;
    private javax.swing.JPanel sudoku_panel;
    // End of variables declaration//GEN-END:variables
 static class SudokuSolver {

        public static int arr[][];
        public static boolean flag = true;

        /*
	 * 1 | 2 | 3 ---------- 4 | 5 | 6 ---------- 7 | 8 | 9
	 * 
	 * 
	 * 
	 * 
         */
        SudokuSolver() {
            arr = new int[9][9];

        }

        public static int get(int a, int b) {
            return arr[a][b];
        }

        public static void setter(int i, int j, int num) {
            arr[i][j] = num;
        }

        public static void main2() throws IOException {

            SudokuSolver solve = new SudokuSolver();

            setZero();

            for (int l = 0; l < 9; l++) {
                for (int m = 0; m < 9; m++) {

                    for (int k = 1; k <= 9; k++) {
                        setSeedValue(l, m, k);
                        solver(0, 0);  //function to solve the problem 

                        setZero();
                    }
                }
            }

            // int k=1; for(int i=0;i<9;i++) { 
            //     arr[i][i]=k; //Manually assigning some of the cells
            //  k++;
            //  } rowSolver(0); // printWriter.close();
        }

        public static void setSeedValue(int a, int b, int k) {
            arr[a][b] = k;
        }

        public static void setZero() {
            for (int a[] : arr) {
                for (int x : a) {
                    x = 0;
                }
            }
        }

        public static void display() throws IOException {

            FileWriter fileWriter = new FileWriter("D:/file.txt",
                    true);
            /* Writing to a file */
            PrintWriter printWriter = new PrintWriter(fileWriter, true);

            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 9; j++) {
                    if ((i == 3 || i == 6) & j == 0) {
                        System.out.println("-------------------"); // for a
                        // horizontal
                        // line to
                        // separate the
                        // boxes
                        printWriter.println("-------------------");
                    }
                    if (j == 3 || j == 6) { // for a vertical line to separate the
                        // boxes
                        System.out.print("|");
                        printWriter.print("|");
                    }
                    System.out.print(arr[i][j] + " ");
                    printWriter.print(arr[i][j] + " ");
                }
                System.out.println();
                printWriter.println();

            }
            System.out.println("*****************************");
            printWriter.println("*****************************");
            printWriter.close();
        }

        public static boolean checkColumn(int row, int col,
                int num) {
            /* checking for uniqueness in a column */

            // System.out.println("Check Column Function: row= " + row + " col= " + col);
            for (int i = 0; i < 9; i++) {
                if (arr[i][col] == num) {
                    // System.out.println("returning false: num="+num);
                    return false;
                }
            }
            // System.out.println("Returning true: num=" + num);
            return true;
        }

        public static boolean checkRow(int row, int col, int num) { // checking for
            // uniqueness in
            // a row

            //	System.out.println("Check Row Function: row= " + row + " col= " + col);
            for (int i = 0; i < 9; i++) {
                if (arr[row][i] == num) {
                    // System.out.println("Returning false: num="+num);
                    return false;
                }
            }
            // System.out.println("Returning true: num=" + num);
            return true;
        }

        public static boolean checkLocal(int row, int col, int num) { // checking
            // for
            // uniqueness
            // in a
            // local 3 X
            // 3 box

            int i, j;
            int n = locality(row, col); // function to identify the box
            switch (n) {
                case 1:
                    for (i = 0; i <= 2; i++) {
                        for (j = 0; j <= 2; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 2:
                    for (i = 0; i <= 2; i++) {
                        for (j = 3; j <= 5; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 3:
                    for (i = 0; i <= 2; i++) {
                        for (j = 6; j <= 8; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 4:
                    for (i = 3; i <= 5; i++) {
                        for (j = 0; j <= 2; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 5:
                    for (i = 3; i <= 5; i++) {
                        for (j = 3; j <= 5; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 6:
                    for (i = 3; i <= 5; i++) {
                        for (j = 6; j <= 8; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 7:
                    for (i = 6; i <= 8; i++) {
                        for (j = 0; j <= 2; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 8:
                    for (i = 6; i <= 8; i++) {
                        for (j = 3; j <= 5; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
                case 9:
                    for (i = 6; i <= 8; i++) {
                        for (j = 6; j <= 8; j++) {
                            if (arr[i][j] == num) {
                                return false;
                            }
                        }
                    }
                    return true;
            }
            return false;
        }

        public static int locality(int row, int col) { // function returns box no.
            if ((row >= 0 & row <= 2) & (col >= 0 & col <= 2)) {
                return 1;
            } else if ((row >= 0 & row <= 2) & (col >= 3 & col <= 5)) {
                return 2;
            } else if ((row >= 0 & row <= 2) & (col >= 6 & col <= 8)) {
                return 3;
            } else if ((row >= 3 & row <= 5) & (col >= 0 & col <= 2)) {
                return 4;
            } else if ((row >= 3 & row <= 5) & (col >= 3 & col <= 5)) {
                return 5;
            } else if ((row >= 3 & row <= 5) & (col >= 6 & col <= 8)) {
                return 6;
            } else if ((row >= 6 & row <= 8) & (col >= 0 & col <= 2)) {
                return 7;
            } else if ((row >= 6 & row <= 8) & (col >= 3 & col <= 5)) {
                return 8;
            } else {
                return 9;
            }

        }

        /*	public static void rowSolver(int row) throws IOException {

		if (row == 9)
			return;
		colSolver(row, 0);
		if (row == 8) {
			display();
			System.out.println("------------------------------");

			return;
		}
		rowSolver(row + 1);

	}

	public static void colSolver(int row, int col) throws IOException {
		int num;
		if (col == 9)
			return;
		if (arr[row][col] != 0){
			colSolver(row, col + 1);
                        return;
                }
		for (num = 1; num <= 9; num++) {

//			System.out.println("Checking for num: " + num + " in row: " + row + " " + checkRow(row, col, num));
//			System.out.println("Checking for num: " + num + " in col:" + col + " " + checkColumn(row, col, num));
//			System.out.println("Checking for num in local:" + num + " " + checkLocal(row, col, num));
			if (checkRow(row, col, num) && (checkColumn(row, col, num)) && (checkLocal(row, col, num))) {
				arr[row][col] = num;
				//display();
				colSolver(row, col + 1);
			}
		}
		if (col != 8 && num == 10 && arr[row][col + 1] == 0) {
			arr[row][col] = 0;
		}
	} */
        public static void colSolver(int row, int col) throws IOException {
            int num;
            if (col == 9 || row == 9) {
                return;
            }
            if (arr[row][col] != 0) {
                if (col == 8) {
                    colSolver(row + 1, 0);
                } else {
                    colSolver(row, col + 1);
                    return;
                }
            }
            for (num = 1; num <= 9; num++) {

//			 System.out.println("Checking for num: " + num + " in row: " + row
//			 + " " + checkRow(row, col, num));
//			 System.out.println("Checking for num: " + num + " in col:" + col
//			 + " " + checkColumn(row, col, num));
//			 System.out.println("Checking for num in local:" + num + " " +
//			 checkLocal(row, col, num));
                if (checkRow(row, col, num) && (checkColumn(row, col, num)) && (checkLocal(row, col, num))) {
                    arr[row][col] = num;
                    // display();
                    if (col == 8) {
                        colSolver(row + 1, 0);

                    } else {
                        colSolver(row, col + 1);

                    }
                    if (row == 8 && col == 8) {
                        display2();
                    }

                }
                if (flag == false) {
                    return;
                }
                arr[row][col] = 0;
            }
            if (flag == false) {
                return;
            }
            if (col != 8 && num == 10 && arr[row][col + 1] == 0) {
                arr[row][col] = 0;
            }
        }

        public static void display2() throws IOException {

            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 9; j++) {
                    if ((i == 3 || i == 6) & j == 0) {
                        System.out.println("-------------------"); // for a
                        // horizontal
                        // line to
                        // separate the
                        // boxes

                    }
                    if (j == 3 || j == 6) { // for a vertical line to separate the
                        // boxes
                        System.out.print("|");

                    }
                    System.out.print(arr[i][j] + " ");

                }
                System.out.println();

            }
            System.out.println("*****************************");
            flag = false;

        }

        public static void solver(int row, int col) throws IOException {
            boolean flag2 = true;
            int i = 0;

            while (flag2) {
                int randomNumber = ThreadLocalRandom.current().nextInt(1, 10);
                System.out.println(randomNumber);
                if (arr[0][i] == 0) {
                    if (checkRow(row, col, randomNumber) && checkColumn(row, col, randomNumber) && checkLocal(row, col, randomNumber)) {

                        arr[0][i] = randomNumber;
                        flag2 = false;
                    }
                } else {
                    i++;
                }

            }
            colSolver(row, col);
        }
    }

}
